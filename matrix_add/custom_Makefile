TF_INC = $(shell python -c 'import tensorflow as tf; print(tf.sysconfig.get_include())')
CUDA_LIB = /graphics/projects/cuda/toolkit_8.0/cuda/lib
# CUDA_LIB = /usr/local/cuda/lib64

# FLAGS=-fPIC --shared -D _GLIBCXX_USE_CXX11_ABI=0
FLAGS=-fPIC --shared


all: clean build

build: matrix_add_op.so

matrix_add_op.cu.o:
	nvcc -std=c++11 --expt-relaxed-constexpr --shared --gpu-architecture=sm_52 \
		-c -o matrix_add_op.cu.o kernels/matrix_add_kernel.cu \
		-isystem $(TF_INC) \
		-D GOOGLE_CUDA=1 -x cu -Xcompiler $(FLAGS)
	
matrix_add_op.so: kernels/matrix_add_op.cc matrix_add_op.cu.o
	g++ -std=c++11 -o matrix_add_op.so --shared \
		matrix_add_op.cu.o kernels/matrix_add_op.cc ops/matrix_add.cc kernels/matrix_add_kernel.cc\
		-isystem $(TF_INC)  \
		-lcudart -L$(CUDA_LIB) \
		$(FLAGS)

clean:
	rm -f *.o *.so *.pyc *.npy
